# Import pandas.

import pandas as pd

# RUN THIS CELL TO IMPORT YOUR DATA.

# Save in a variable named `data`.

data = pd.read_csv("nba-players.csv", index_col=0)

# Display first 10 rows of data.

data.head(10)

# Display number of rows, number of columns.

data.shape

# Display all column names.

data.columns

# Use .info() to display a summary of the DataFrame.

data.info()

# Display the number of missing values in each column.
# Check whether each value is missing.
#Aggregate the number of missing values per column.

data.isna().sum()

# Display percentage (%) of values for each class (1, 0) represented in the target column of this dataset.

data["target_5yrs"].value_counts(normalize=True)*100

# Select the columns to proceed with and save the DataFrame in new variable `selected_data`.
# Include the target column, `target_5yrs`.

selected_data = data[["gp", "min", "pts", "fg", "3p", "ft", "reb", "ast", "stl", "blk", "tov", "target_5yrs"]]


# Display the first few rows.

selected_data.head()

# Display the first few rows of `selected_data` for reference.

selected_data.head()

# Extract two features that would help predict target_5yrs.
# Create a new variable named `extracted_data`.

# Make a copy of `selected_data` 
extracted_data = selected_data.copy()

# Add a new column named `total_points`; 
# Calculate total points earned by multiplying the number of games played by the average number of points earned per game
extracted_data["total_points"] = extracted_data["gp"] * extracted_data["pts"]

# Add a new column named `efficiency`. Calculate efficiency by dividing the total points earned by the total number of minutes played, which yields points per minute
extracted_data["efficiency"] = extracted_data["total_points"] / extracted_data["min"]

# Display the first few rows of `extracted_data` to confirm that the new columns were added.
extracted_data.head()

# Remove any columns from `extracted_data` that are no longer needed.

# Remove `gp`, `pts`, and `min` from `extracted_data`.
extracted_data = extracted_data.drop(columns=["gp", "pts", "min"])


# Display the first few rows of `extracted_data` to ensure that column drops took place.

extracted_data.head()

# Export the extracted data.

extracted_data.to_csv("extracted_nba_players_data.csv", index=0)

